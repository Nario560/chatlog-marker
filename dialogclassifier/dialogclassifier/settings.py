"""
Django settings for dialogclassifier project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import requests
import base64
import json
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b=^p7+3=k58yua6vkl6x#*&sco^(es!mlo-5625(5_3dedjx@2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'intent_marker.apps.IntentMarkerConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dialogclassifier.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dialogclassifier.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

dbname = 'DB_NAME'
dbusr = 'DB_USER'
dbpass = 'DB_PASS'
dbhst = 'DB_HOST'
dbport = 'DB_PORT'
elasticurl= 'ELASTIC_URL'
try:
    CONSUL_URL = os.environ.get('CONSUL_URL')
    db_name = base64.b64decode(requests.get('/'.join([CONSUL_URL, dbname])).json()[0]['Value']).decode(
        'utf-8')
    db_user = base64.b64decode(requests.get('/'.join([CONSUL_URL, dbusr])).json()[0]['Value']).decode(
        'utf-8')
    db_pwd = base64.b64decode(requests.get('/'.join([CONSUL_URL, dbpass])).json()[0]['Value']).decode(
        'utf-8')
    db_hst = base64.b64decode(requests.get('/'.join([CONSUL_URL, dbhst])).json()[0]['Value']).decode(
        'utf-8')
    db_prt = base64.b64decode(requests.get('/'.join([CONSUL_URL, dbport])).json()[0]['Value']).decode(
            'utf-8')
    ELASTIC_URL = base64.b64decode(requests.get('/'.join([CONSUL_URL, elasticurl])).json()[0]['Value']).decode(
        'utf-8')
except (json.decoder.JSONDecodeError, KeyError, TypeError):
    db_name = os.environ[dbname]
    db_user = os.environ[dbusr]
    db_pwd = os.environ[dbpass]
    db_hst = os.environ[dbhst]
    db_prt = os.environ[dbport]
    ELASTIC_URL = os.environ[elasticurl]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': db_name,
        'USER': db_user,
        'PASSWORD': db_pwd,
        'HOST': db_hst,
        'PORT': db_prt
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static'
STATICFILES_DIRS = [
    '/intent_marker/static'
]
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'intent-marker',
    }
}
